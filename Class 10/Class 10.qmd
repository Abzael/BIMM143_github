---
title: "Class 10 - Structural Bioinformatics"
author: "Abzael Verduzco"
format: pdf
---

##The PDB Database 

First let's see what is in the PBD database - the main repository of protein structures. 

Downloded  composition stats from https://www.rcsdb.org/stats/summary

For context: Release 2023_04 of 13-Sep-2023 of UniProtKB/TrEMBL contains 

https://tinyurl.com/statspdb 

```{r}
stats <- read.csv("PDBstats.csv", row.names = 1)
stats 
```

There is a problem here due to the commas in the numbers. This causes R to treat them as characters. 

```{r}
x <- stats$X.ray
x
```

```{r}
as.numeric(gsub(",","", x))
```

```{r}
rm.comma <- function(x) {
  as.numeric( gsub(",","", x) )
  }
```

```{r}
rm.comma(stats$EM)
```
I can use `apply()` to fix the whole table.. 

```{r}
pdbstats <- apply(stats, 2, rm.comma)
rownames(pdbstats) <- rownames(stats)
pdbstats
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
totals <- apply(pdbstats, 2, sum)
round(totals/totals["Total"] *100 , 2)
```

library(readr)
read.csv("PDBstats.csv")


>Q2: What proportion of structures in the PDB are protein?

```{r}
round(pdbstats[1, "Total"] / sum(pdbstats[ ,"Total"]) * 100, 2)
```

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

Skipped for time 


>Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

Water molecules doesn't appear due to the resolution it is 2A and Hydrogen is smaller than that. 

>Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have? 



>Q.6 Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

Here is a lovely figure of HIP-Pr with teh catalytic ASP residues, the MK1 compound and the all important water 308. 

![](1HSG.png)

##The Bio3d package for structural bioinformatics

```{r}
library(bio3d)

pdb <- read.pdb("1HSG")
pdb
```


```{r}
head(pdb$atom)
```
##Predicting functional motions of a single structure

Let's finish today with a bioinformatics calculation to predict the functional motions of a PDB structure. 

```{r}
adk <- read.pdb("6s36")
```

```{r}
m <- nma(adk)
```

```{r}
plot(m)
mktrj(m, file="adk_m7.pdb")
```

We need some packages for todays class. These include `bio3d` and `msa`. 
 
The `msa` package is from BioConductor. These packages focus on genomics type work and are managed by the `BiocManager` package. 

Install `install.packages("BioManager")` and then `BiocManager::install("msa")` all entered in the R "brain" console.

>>Q10. Which of the packages above is found only on BioConductor and not CRAN?

MSA 

>>Q11. Which of the above packages is not found on BioConductor or CRAN?



>>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket?

TRUE

```{r}
library(bio3d)

aa <- get.seq("1ake_A")
aa
```

>>Q13. How many amino acids are in this sequence, i.e. how long is this sequence?

It is 214 amino acids long 

```{r}
#b <- blast.pdb(aa)
```

```{r}
#hits <- plot(b)
```

```{r}
#attributes(b)
#head(b$hit.tbl)
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')```

Side-note: Lets annotate these structures (in other word find out what they are, what they are from, stuff about the experiment they were solved in etc.)

For this we can use the `pdb.annotate()`

```{r}
anno <- pdb.annotate(hits$pdb.id)
```

```{r}
#attributes(anno)
head(anno)
```

Now we can download all these structures for further analysis with the `get.pdb()` function. 

```{r}
#Download related PDB files 
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)

```

Now we have all these realated structures we can Align and Superpose...

```{r}
# Align related PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
pdbs
```

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
#Visualize first principal component 
pcl <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

